--EXERCICIO 1:
SET SERVEROUTPUT ON
SET VERIFY OFF
DECLARE 
    V_SAL_ATUAL NUMBER(10,2) := 1302.00;
    V_SAL_REAJ NUMBER(10,2);
BEGIN
    V_SAL_REAJ := V_SAL_ATUAL * 0.25;
    DBMS_OUTPUT.PUT_LINE('Salario Atual - R$'||V_SAL_ATUAL);
    DBMS_OUTPUT.PUT_LINE('Salario com reajuste - R$'|| V_SAL_REAJ);
END;

--EXERCICIO 2:
DECLARE
    V_DOLAR NUMBER(10,2) := 5.21;
    V_REAL_DOLAR NUMBER(10,2) := V_DOLAR * 45;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Contação dólar 21/03/2022 '|| V_DOLAR);
    DBMS_OUTPUT.PUT_LINE('Converversão US$ 45.00 em R$'|| V_REAL_DOLAR);
END;

--EXERCICIO 3:
DECLARE
    V_CARRO NUMBER(10,2) := '&V_CARRO';
    V_VALOR_FINAL  V_CARRO%TYPE := (V_CARRO *1.03/10);
BEGIN
    DBMS_OUTPUT.PUT_LINE('Valor do Bem: '|| V_CARRO);
    DBMS_OUTPUT.PUT_LINE('Valor da Prestação em 10x '|| V_VALOR_FINAL);
END;

--EXERCICIO 4:
DECLARE 
    V_CARRO NUMBER(10,2) := '&V_CARRO' * 0.8;
    V_PRESTA V_CARRO%TYPE;
BEGIN
    V_PRESTA := (V_CARRO* 1.1)/6;
    DBMS_OUTPUT.PUT_LINE('Valor da prestação em 6x: '||V_PRESTA);
    V_PRESTA := (V_CARRO * 1.15)/12;
    DBMS_OUTPUT.PUT_LINE('Valor da prestação em 12x: '||V_PRESTA);
    V_PRESTA := (V_CARRO * 1.2)/18;
    DBMS_OUTPUT.PUT_LINE('Valor da prestação em 18x: '||V_PRESTA);
END;

--EXERCICIO 5:
DECLARE
    V_SEXO VARCHAR(20) := '&V_SEXO';
BEGIN 
    IF V_SEXO = 'F' or V_SEXO = 'Feminino' or V_SEXO = 'FEMININO' THEN
        DBMS_OUTPUT.PUT_LINE('Sexo Feminino');
    ELSIF V_SEXO = 'M' or V_SEXO = 'Masculino' or V_SEXO = 'MASCULINO' THEN
        DBMS_OUTPUT.PUT_LINE('Sexo Masculino');
    ELSE
        DBMS_OUTPUT.PUT_LINE('OUTRO!');
    END IF;
END;

--EXERCICIO 6:
DECLARE
    V_CARRO NUMBER(10,2) := '&V_CARRO' * 0.8;
    V_PRESTA V_CARRO%TYPE;
    V_NUMERO NUMBER(10,2) := '&V_NUMBER';
BEGIN 
    IF V_NUMERO = 6 THEN
        V_PRESTA := (V_CARRO*1.1)/6;
        DBMS_OUTPUT.PUT_LINE('Valor da prestação em 6x: '||V_PRESTA);
    ELSIF V_NUMERO = 12 THEN
        V_PRESTA := (V_CARRO * 1.15)/12;
        DBMS_OUTPUT.PUT_LINE('Valor da prestação em 12x: '||V_PRESTA);
    ELSIF V_NUMERO = 18 THEN
        V_PRESTA := (V_CARRO *1.2)/18;
        DBMS_OUTPUT.PUT_LINE('Valor da prestação em 18x: '||V_PRESTA);
    ELSE
        DBMS_OUTPUT.PUT_LINE('Indique uma prestação valida!!');
    END IF;
END;

--FAZENDO CRUD--

INSERT INTO ALUNO_FIAP (NOME, RM, SEXO) VALUES ('Pedro Luiz', 'RM95189', 'M');
INSERT INTO ALUNO_FIAP (NOME, RM, SEXO) VALUES ('Diogo Santos', 'RM97818', 'N');
INSERT INTO ALUNO_FIAP (NOME, RM, SEXO) VALUES ('Maria Clara', 'RM81456', 'F');

SELECT * FROM ALUNO_FIAP;

--BLOCO DE COMANDO PARA ACHAR NOME COM BASE EM RM:

DECLARE 
    V_RM CHAR(7) := '&V_RM';
    V_NOME VARCHAR(50);
BEGIN
    SELECT NOME INTO V_NOME FROM ALUNO_FIAP WHERE RM = V_RM;
    DBMS_OUTPUT.PUT_LINE('O nome do aluno é: '||V_NOME);
END;

--INSERINDO DADOS POR MEIO DE BLOCO DE COMANDO:
DECLARE
    V_RM CHAR(7) := '&V_RM';
    V_NOME VARCHAR(50) := '&V_NOME';
    V_SEXO CHAR(1) := '&V_SEXO';
BEGIN
    INSERT INTO ALUNO_FIAP (NOME, RM, SEXO) VALUES (V_NOME, V_RM, V_SEXO);
END;

--DELETANDO DADOS POR MEIO DE BLOCO DE COMANDO:
DECLARE
    V_RM CHAR(7) := '&V_RM';
BEGIN
    DELETE FROM ALUNO WHERE RM = V_RM;
END;

--FAZENDO UPDATE POR MEIO DE BLOCO DE COMANDO:
DECLARE 
    V_RM CHAR(7) := '&V_RM';
    V_NOME VARCHAR (50) := '&V_NOME';
    --V_SEXO CHAR(1) := '&V_SEXO';
BEGIN
    UPDATE ALUNO_FIAP SET NOME = V_NOME WHERE RM = V_RM;
END;

--DROP TABLE:
DROP TABLE ALUNO_FIAP;


--TABELA:
CREATE TABLE ALUNO_FIAP (
NOME    VARCHAR(50)     NOT NULL,
RM      CHAR(7)         PRIMARY KEY,
SEXO    CHAR(1)         NOT NULL
);

SELECT * FROM aluno_fiap;